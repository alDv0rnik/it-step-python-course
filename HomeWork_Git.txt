1. Чтобы создать директорию на локальном компьютере, мы должны прописать команду mkdir <название директории>
и инициализировать эту директорию для git при помощи команды git init, затем при помощи команды git status
мы проверяем статус созданной директории.
2. Переходим в только что созданную директорию с помощью команды cd !$  и создаем файл при помощи команды
touch text.txt. Команда git add . добавляет изменение из рабочего каталога в раздел
проиндексированных файлов.
Она сообщает Git, что мы хотим включить изменения в конкретном файле в следующий коммит.
Далее при помощи команды git commit -m "Some commit" мы делаем комментарий тому, какие изменения мы произвели.
3. Заходим на сайт Github.com и создаем удаленный репозиторий.
4. Далее создаем синхронизацию между локальными сервисами и сервером при помощи команды git remote add origin
<вставляем ссылку от репозитория>
5. После всего этого мы должны отправить наши файлы на репозиторий на сервере при помощи команды
git push origin <branch> название ветки (по умолчанию будет mster или main)
6. Для того, чтобы создать новую ветку и перейти в нее, мы должны прописать следующую команду
git checkout -b develop
7. Создаем новую ветку от ветки develop и переключаемся на нее git checkout -b develop_new
8. Добавляем первую строку в text.txt и делаем следующие команды: git add .
 Затем git commit -m "add first string" и отправляем при помощи команды git push origin develop_new наши
 изменения на сервер.
9.  Создаем еще 1 директорию при помощи команды mkdir и инициализируем ее для git (git init)
и производим клонирование нашего репозитория в нашу новую директорию при помощи команды
git clone <ссылка с git на наш репозиторий>
10. Создаем переключаемся на ветку develop (git checkout develop) и создаем от этой ветки новую
git checkout -b develop_new2
11. Добавляем в text.txt вместо записи первой строки другую запись этой строки и заново отправляем на наш репозиторий
git add . git commit -m "modify text.txt" git push origin develop_new2
12. Переключаемся на develop (git checkout develop)
13. Объединяем нашу первую ветку при помощи команды git merge develop и отправляем push на git, предварительно
добавив в индекс наши изменения и закомментировав.
14. Объединяем нашу вторую ветку при помощи команды git merge develop_new и отправляем push на гит, предварительно
добавив в индекс наши изменения и закомментировав.
15. Разрешаем конфликты, если необходимо, путем удаления лишней информации в text.txt

